version: '3.5'
services:
  tmf:
   build: .
   ports:
     - "5000:5000"
     - "5001:5001"
     - "5002:5002"
   depends_on:
     - "kafka"
   links:
     - "kafka"
  mongodb:
    image: mongo:4.0.8
    container_name: "mongodb-tmf"
    environment:
      MONGO_INITDB_ROOT_USERNAME: 5gzorro
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodbdata:/data/db
    ports:
      - "27017:27017"
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    container_name: "kafka"
    hostname: kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    links:
      - "zookeeper"
    environment:
      #!KAFKA_ADVERTISED_HOST_NAME: kafka
      #!KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #!KAFKA_LISTENERS: PLAINTEXT://:9092
      #!KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      #!KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "sample:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  mongodbdata:
